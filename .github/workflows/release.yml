name: Build and Release

on:
  push:
    branches:
      - master
      - dev
  workflow_call:
    outputs:
      version:
        value: ${{ jobs.build.outputs.version }}

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build project
        run: bun run build

      - name: Run tests
        run: bun run test

      - name: Extract version from package.json
        id: version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create Git tag
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git tag "v${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          FILES=$(ls build/**/* | tr '\n' ' ')
          PRERELEASE_FLAG=""
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            PRERELEASE_FLAG="--prerelease --latest=false"
            gh release delete "v${{ env.VERSION }}" --yes || true
          fi
          gh release create $PRERELEASE_FLAG "v${{ env.VERSION }}" $FILES --title "Release v${{ env.VERSION }}" --notes "Release of version v${{ env.VERSION }}"
